version: '3.8'

services:
  db:
    image: postgres:16  # Utilisation de l'image officielle
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  # Volume pour stocker les données
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql  # Charge `data.sql` au démarrage
    networks:
      - app-network
    healthcheck:  # Ajout d'un healthcheck pour s'assurer que PostgreSQL est prêt avant que le backend ne démarre
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 10s

  backend:
    image: anassezzine/backend:latest  # Utilisation de l'image Docker Hub
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy  # Attendre que PostgreSQL soit prêt
    environment:
      - DB_USER=postgres
      - DB_HOST=db
      - DB_DATABASE=mydatabase
      - DB_PASSWORD=password
      - DB_PORT=5432
    networks:
      - app-network

  frontend:
    image: anassezzine/frontend:latest  # Utilisation de l'image Docker Hub
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
